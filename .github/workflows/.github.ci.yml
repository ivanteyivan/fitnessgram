name: foodgram-project workflow

on: [push]

jobs:
  tests:
    name: PEP8 check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      id: run_install
      run: |
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return 
        pip install -r backend/requirements.txt 
        
    - name: Test with flake8
      id: run_flake8
      run: |
        python -m flake8
        
    - name: Send message if Tests failed
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Статус шага run_install - ${{ steps.run_install.outcome }}
          Статус шага run_flake8 - ${{ steps.run_flake8.outcome }}
          Ошибка при тестировании - ${{ github.repository }}
          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
  build_and_push_to_docker_hub:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        id: login_dockerhub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Push backend to Docker Hub
        id: push_backend
        uses: docker/build-push-action@v2 
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_back:latest
          
      - name: Push frontend to Docker Hub
        id: push_frontend
        uses: docker/build-push-action@v2 
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_front:latest
          
      - name: Send message if build_and_push_to_docker_hub failed
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Статус шага login_dockerhub - ${{ steps.login_dockerhub.outcome }}
            Статус шага push_backend - ${{ steps.push_backend.outcome }}
            Статус шага push_frontend - ${{ steps.push_frontend.outcome }}
            Ошибка при сборке/отправке образа на DockerHub  - ${{ github.repository }}
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Deploy
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok
          ngrok config add-authtoken ${{ secrets.NGROK_SECRET_KEY }}
          ngrok http 8000 --log=stdout > ngrok.log 2>&1 &
          sleep 5
          if ! pgrep ngrok > /dev/null; then
            echo "Failed to start ngrok"
            cat ngrok.log
            exit 1
          fi
          curl -s http://127.0.0.1:4040/api/tunnels > tunnels.json
          if [ ! -s tunnels.json ]; then
            echo "Failed to get ngrok tunnels"
            cat ngrok.log
            exit 1
          fi
              
  send_message:
    name: Send success message
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Ура !  ${{ github.workflow }} для репозитория ${{ github.repository }} успешно выполнен! 